library(ggplot2)
library(rlang)
# clean environment variables
rm(list = ls())
# import libraries
library(ggplot2)
# clean environment variables
rm(list = ls())
# import libraries
library(ggplot2)
# look at the structure of the dataset
str(diamonds)
# clean environment variables
rm(list = ls())
# import libraries
library(ggplot2)
pwd
cd ..
artists <- read.csv('Artists.csv')
summary(artists)
artworks <- read.csv('Artworks.csv')
View(artists)
View(artworks)
artists <- read.csv('Artists.csv')
artworks <- read.csv('Artworks.csv')
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
View(df_clean)
unique(df_clean$gender)
unique(df_clean$age)
unique(df_clean$race)
library(dplyr)
library(ggplot2)
ggplot(data = df_clean, aes(x = age, y = race, fill = gender)) +
geom_bar(stat = 'identity')
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age), position = 'dodge') +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = age, fill = race), position = 'dodge') +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = age, fill = race)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = gender, fill = race)) +
facet_wrap(~age)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
source("~/cct/data-exploration/assessment/ca-group-11-december-2022/dataset_diabetes/ca-group-mark-fernando.Rmd")
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age), stat = 'identity') +
facet_wrap(~gender)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
rm(list = ls())
library(dplyr)
library(ggplot2)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
rm(list = ls())
library(dplyr)
library(ggplot2)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
ggplot(data = df_clean) +
geom_point(aes(x = time_in_hospital, y = num_lab_procedures))
ggplot(data = df_clean) +
geom_bar(aes(x = time_in_hospital, y = num_lab_procedures))
ggplot(data = df_clean) +
geom_point(aes(x = time_in_hospital, y = num_lab_procedures))
rm(list = ls())
library(dplyr)
library(ggplot2)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
ggplot(data = df_clean) +
geom_bar(aes(x = race, fill = age)) +
facet_wrap(~gender)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
for(i in 1:ncol(df_numerical)){
ggplot(data = df_numerical, aes(df_numerical[, i])) +
geom_boxplot()
}
ggplot(data = df_numerical, aes(df_numerical[, i])) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
for(i in 1:ncol(df_numerical)){
ggplot(data = df_numerical, aes(df_numerical[, i])) +
geom_boxplot()
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
ggplot(data = df_numerical) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
boxplot(df_numerical)
library(dplyr)
library(ggplot2)
library(reshape)
library(dplyr)
library(ggplot2)
library(reshape)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable, scale = 'free')
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot() +
# facet_wrap(~variable, scale = 'free')
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot()
# facet_wrap(~variable, scale = 'free')
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable, scale = 'free')
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot() +
facet_wrap(~variable, scale = 'free')
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value)) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = factor(variable))) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), values, color = factor(variable))) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = factor(variable))) +
geom_boxplot()
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = factor(variable))) +
geom_boxplot() +
labs(x = 'Variable', y = 'Values')
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = factor(variable))) +
geom_boxplot() +
labs(x = 'Variable', y = 'Values') +
scale_fill_discrete(name = "Variables")
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = factor(variable))) +
geom_boxplot() +
labs(x = 'Variable', y = 'Values') +
guides(fill=guide_legend(title="New Legend Title"))
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = factor(variable))) +
geom_boxplot() +
labs(x = 'Variable', y = 'Values')
df_numerical_melted
setwd("~/cct/data-exploration/assessment/ca-group-11-december-2022/dataset_diabetes")
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('-------------------------------------')
}
df_numerical_melted <- melt(df_numerical)
ggplot(df_numerical_melted, aes(factor(variable), value, color = variable)) +
geom_boxplot() +
labs(x = 'Variable', y = 'Values')
df_numerical_melted
