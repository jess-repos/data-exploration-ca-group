}
str(df)
df_clean <- sample(df, 10000)
df_clean <- sample(df, 100)
df_clean <- sample(1:5, 3)
str(df_clean)
df_clean <- sample(1:5, 3)
str(df_clean)
df_clean <- sample(1:5, 3)
str(df_clean)
df_clean <- sample(df, 3)
str(df_clean)
df_clean <- sample(1:nrow(df), 10000)
str(df_clean)
library(dplyr)
df_clean <- sample_n(df, 10000)
str(df_clean)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"),]
}
nrow(df)
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe to push cleaned data to
id_clean <- data.frame(id = 1:30)
# admission_type variable
admission_type <- rep(NA, each = 30)
admission_type[1:8] <- id[1:8, 2]
id_clean$admission_type <- admission_type
# discharge_disposition variable
discharge_disposition <- rep(NA, each = 30)
discharge_disposition[1:26] <- id[11:36, 2]
discharge_disposition[27:29] <- id[38:40, 2]
discharge_disposition[30] <- id[37, 2]
id_clean$discharge_disposition <- discharge_disposition
admission_source <- rep(NA, each = 30)
admission_source[1:15] <- id[43:57, 2]
admission_source[17:26] <- id[58:67, 2]
id_clean$admission_source <- admission_source
id_clean
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
str(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"),]
}
nrow(df)
df_clean <- sample_n(df, 10000)
str(df_clean)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe to push cleaned data to
id_clean <- data.frame(id = 1:30)
# admission_type variable
admission_type <- rep(NA, each = 30)
admission_type[1:8] <- id[1:8, 2]
id_clean$admission_type <- admission_type
# discharge_disposition variable
discharge_disposition <- rep(NA, each = 30)
discharge_disposition[1:26] <- id[11:36, 2]
discharge_disposition[27:29] <- id[38:40, 2]
discharge_disposition[30] <- id[37, 2]
id_clean$discharge_disposition <- discharge_disposition
admission_source <- rep(NA, each = 30)
admission_source[1:15] <- id[43:57, 2]
admission_source[17:26] <- id[58:67, 2]
id_clean$admission_source <- admission_source
id_clean
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
str(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"),]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, 1])
admission_type
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, 1])
# id_clean
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
str(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"),]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, 1])
admission_type
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
admission_type
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for admission_type
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
str(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"),]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
ncols(df)
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
ncol(df)
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
ncol(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
test <- df
test <- df
test$admission_type_id[match(test$admission_type_id, admission_type$id)] <- admission_type$description
unique(test$admission_type_id)
str(df$num_lab_procedures)
summary(df)
summary(df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')])
summary(df)
summary(df_clean)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
summary(df_numerical)
sd(df_numerical)
sd(df_numerical$time_in_hospital)
sd(df_numerical$num_lab_procedures)
sd(df_numerical$num_procedures)
sd(df_numerical$num_medications)
sd(df_numerical$number_outpatient)
sd(df_numerical$number_emergency)
sd(df_numerical$number_inpatient)
sd(df_numerical)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
summary(df_numerical)
for(i in 1:nrow(df_numerical)){
summary(df_numerical[, i])
sd(df_numerical[, i])
}
for(i in 1:nrow(df_numerical)){
summary(df_numerical[, i])
sd(df_numerical[, i])
}
summary(df_numerical[, i])
summary(df_numerical[, 1])
sd(df_numerical[, i])
sd(df_numerical[, 1])
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
summary(df_numerical[, i])
sd(df_numerical[, i])
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(summary(df_numerical[, i]))
print(sd(df_numerical[, i]))
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation',sd(df_numerical[, i]))
print('/n')
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print()
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print(')
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
print('')
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]), sep = '\n\n')
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]), sep = '\n\n')
}
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
# summary(df_numerical)
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
rm(list = ls())
library(dplyr)
df <- read.csv('diabetic_data.csv')
id <- read.csv('IDs_mapping.csv')
str(df)
str(id)
head(df)
head(id)
id
num_only_temp <- as.numeric(id$admission_type_id)
max(na.omit(num_only_temp))
# create new dataframe for admission_type
admission_type <- data.frame(id[1:8, ])
colnames(admission_type)[1] = "id"
admission_type
# create new dataframe for discharge_disposition
discharge_disposition <- data.frame(id[11:40, ])
colnames(discharge_disposition)[1] = "id"
discharge_disposition
# create new dataframe for discharge_disposition
admission_source <- data.frame(id[43:67, ])
colnames(admission_source)[1] = "id"
admission_source
df
na_count <- sapply(df, function(y) sum(length(which(is.na(y)))))
na_count
na_count_question <- sapply(df, function(y) sum(length(which(y == '?'))))
na_count_question
df
df[ ,c('weight', 'medical_specialty', 'payer_code')] <- list(NULL)
head(df)
for(i in 1:ncol(df)) {
df <- df[!(df[, i] == "?"), ]
}
nrow(df)
df_clean <- sample_n(df, 10000)
nrow(df_clean)
df_numerical <- df_clean[, c('time_in_hospital', 'num_lab_procedures', 'num_procedures',  'num_medications', 'number_outpatient', 'number_emergency',  'number_inpatient')]
for(i in 1:ncol(df_numerical)){
print(names(df_numerical[i]))
print(summary(df_numerical[, i]))
print('Standard Deviation')
print(sd(df_numerical[, i]))
}
source("~/cct/data-exploration/assessment/ca-group-11-december-2022/dataset_diabetes/ca-group-mark-fernando.Rmd")
source("~/cct/data-exploration/assessment/ca-group-11-december-2022/dataset_diabetes/ca-group-mark-fernando.Rmd")
